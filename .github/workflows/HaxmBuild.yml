name: HAXM build on Windows, Mac OS and Linux

on: [push, pull_request]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  my_first_job: 
    name: Windows build
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

   # - name: Restore NuGet packages
      #working-directory: ${{env.GITHUB_WORKSPACE}}
      #run: nuget restore ${{env.SOLUTION_FILE_PATH}}
    - name: Install related pkg
      run: |
        choco install -y nuget.commandline
        choco install -y windowsdriverkit10
        choco install -y windows-sdk-8.1
        #windows-sdk-10.1 could not be installed so leverage 8.1 instead here.
    - name: Build
     # working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: |
        cd platforms/windows
        nuget restore
        msbuild haxm.sln /p:Configuration="Debug" /p:Platform="Win32"
        msbuild haxm.sln /p:Configuration="Debug" /p:Platform="x64"
        ./build/tests/x64/Debug/haxm-tests.exe
    #    export PATH="$PATH:/c/Program Files (x86)/Microsoft Visual Studio/Installer/"
    #    export MSVC=$(vswhere -latest -products "*" -requires Microsoft.Component.MSBuild -property installationPath)
    #    export MSVC=$(echo /$MSVC | sed -e 's/\\/\//g' -e 's/://')
    #    export PATH="$PATH:$MSVC/MSBuild/15.0/Bin/"
    #    unzip "/c/Program Files (x86)/Windows Kits/10/Vsix/WDK.vsix" -d wdk
    #    cp -R wdk/\$VCTargets/* "$MSVC/Common7/IDE/VC/VCTargets"
    #    export PROPS="//p:SpectreMitigation=false"
    #    msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
  my_second_job:
    name: Mac build
    runs-on: macos-10.15
    # It is pity no previous versions of Mac OSes could be selected but HAXM build rely on the Xcodebuild10.12 and prior.
    steps:
    - uses: actions/checkout@v2
#    - name: Add Xcodebuild from Marketplace
#      uses: devbotsxyz/xcode-build@v1.0.0

   # - name: Restore NuGet packages
      #working-directory: ${{env.GITHUB_WORKSPACE}}
      #run: nuget restore ${{env.SOLUTION_FILE_PATH}}
    - name: Mac darwin build
      run: |
        cd /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/
        ls
        mv MacOSX.sdk MacOSX.sdk.bak
        wget https://github.com/phracker/MacOSX-SDKs/releases/download/10.15/MacOSX10.13.sdk.tar.xz
        ls
        tar xzf MacOSX10.13.sdk.tar.xz
        mv MacOSX10.13.sdk MacOSX.sdk
        cd -
        cd platforms/darwin
        xcodebuild -configuration Debug -sdk macosx
  my_third_job:
     name: linux build
     runs-on: ubuntu-latest
     steps:
     - uses: actions/checkout@v2
     - name: go to platform/linux
       shell: bash
       run: |
          wget -P /tmp/downloads http://mirrors.kernel.org/ubuntu/pool/universe/n/nasm/nasm_2.13.02-0.1_amd64.deb
          sudo apt-get install -y dpkg
          sudo dpkg -i /tmp/downloads/nasm_2.13.02-0.1_amd64.deb
          cd platforms/linux
          ls
          pwd
          make
